조인(Join)이란 2개 이상 테이블을 서로 엮어 조회하는 것이다.

​

Inner Join은 서로 매칭되는 것만 엮어 조회한다.

​

Outer Join은 매칭 뿐만 아니라 미매칭 데이터도 함께 조회한다.

Outer Join에는 Left Outer Join, Right Outer Join, Full Outer Join이 있다.

Left, Right는 미매칭 데이터도 조회할 테이블 방향이다.

따라서 Left Outer Join은 왼쪽에 기입한 테이블이 매칭여부와 관계없이 모두 나오게 된다.

​

사례를 통해 익혀보자.

​

A와 B라는 2개의 코드성 테이블이 있고 

각 테이블의 코드를 비교하면서 어떻게 작동하는지 알아보자.

​

우선 실습할 2개 테이블 생성하고 데이터를 넣는다.

CREATE TABLE A(
	CODE INT NOT NULL,
	CODE_NAME NCHAR(100) NOT NULL
	CONSTRAINT PK_A PRIMARY KEY(CODE)
);

CREATE TABLE B(
	CODE INT NOT NULL,
	CODE_NAME NCHAR(100) NOT NULL
	CONSTRAINT PK_B PRIMARY KEY(CODE)
);

INSERT INTO A(CODE, CODE_NAME) VALUES(1, 'ALPHA')
INSERT INTO A(CODE, CODE_NAME) VALUES(2, 'BETA')

INSERT INTO B(CODE, CODE_NAME) VALUES(2, 'BETA')
INSERT INTO B(CODE, CODE_NAME) VALUES(3, 'GAMMA')
1) 테이블 A에만 존재하는 코드를 조회한다.


SELECT *
FROM A LEFT OUTER JOIN B ON A.CODE = B.CODE
WHERE B.CODE IS NULL

​

​

2) 테이블 A와 테이블 B 모두에 존재하는 코드를 조회한다.


SELECT *
FROM A INNER JOIN B ON A.CODE = B.CODE

​

​

3) 테이블 A의 모든 코드는 매칭여부와 관계없이 모두 조회한다.


SELECT *
FROM A LEFT OUTER JOIN B ON A.CODE = B.CODE

​

​

4) A테이블과 B테이블 매칭이 안되는 나머지를 모두 조회한다.


SELECT *
FROM A FULL OUTER JOIN B ON A.CODE = B.CODE
WHERE A.CODE IS NULL OR B.CODE IS NULL

join(조인)
둘 이상의 테이블을 연결해서 데이터를 검색하는 방법

연결하려면 테이블들이 적어도 하나의 컬럼을 공유하고 있어야함

이 공유하고 있는 컬럼을 PK 또는 FK값으로 사용

​

종류

1. INNER JOIN : 내부조인 ->교집합

2. LEFT/RIGHT JOIN -> 부분집합

3. OUTER JOIN : 외부조인 ->합집합

오라클은 OUTER JOIN있지만, MYSQL은 없어서 LEFT조인 + RIGHT조인

​

​

예를 들어 두가지 테이블(T1,T2)이 있다고 하면, 이걸로 join결과를 그림으로 그려보면서 복습해보자 

A

ID	ENAME
1	AAA
2	BBB
3	CCC
B

ID	KNAME
1	가
2	나
4	라
5	마
 

1. INNER JOIN : 교집합, 공통적인 부분만 SEELCT됨

​

ID	ENAME	KNAME
1	AAA	가
2	BBB	나
SELECT A.ID, A.ENAME, A.KNAME
FROM A INNER JOIN B
ON A.ID = B.ID;
​

2. LEFT JOIN : 조인기준 왼쪽에 있는거 '다' SELECT 됨 
(공통적인 부분 + LEFT에 있는거만 )

ID	ENAME	KNAME
1	AAA	가
2	BBB	나
3	CCC	NULL
SELECT A.ID, A.ENAME, A.KNAME
FROM A LEFT OUTER JOIN B
ON A.ID = B.ID;
​

2-1. 조인기준 왼쪽에 있는거'만' SELECT됨 (LEFT에 있는거만 : A-B)
LEFT가 가지고 있는 것 중 공통적인 부분을 제외한 값

그냥 LEFT JOIN값 중에서 WHERE조건으로 NULL인 값을 조회

B가 NULL의 값을 가지고 있는건 A만 가지고 있는 값이니까 


ID	ENAME	KNAME
3	CCC	NULL
SELECT A.ID, A.ENAME, A.KNAME
FROM A LEFT OUTER JOIN B
ON A.ID = B.ID;
WHERE B.ID IS NULL
쉽게생각하는방법 : A에남아있는거만 하고 싶다? 

일단 A를 왼쪽에 두고 LEFT JOIN을 하고, 겹치는 쪽을 뺴기 위해서 반대쪽 KEY NULL

 

3.RIGHT JOIN : 조인기준 오른쪽에 있는거 '다' SELECT됨
(공통적인 부분 + RIGHT에 있는거만)

ID	ENAME	KNAME
1	AAA	가
2	BBB	나
4	NULL	라
5	NULL	마
SELECT A.ID, A.ENAME, A.KNAME
FROM A RIGHT OUTER JOIN B
ON A.ID = B.ID;
3-1.조인기준 오른쪽에 있는거만! SELECT됨
(RIGHT에 있는거만 : B-A)
RIGHT가 가지고 있는 것 중 공통적인 부분을 제외한 값

그냥 RIGHT JOIN값 중에서 WHERE조건으로 NULL인 값을 조회


ID	ENAME	KNAME
4	NULL	라
5	NULL	마
SELECT A.ID, A.ENAME, A.KNAME
FROM A RIGHT OUTER JOIN B
ON A.ID = B.ID
WHERE A.ID IS NULL
쉽게생각하는방법 : B에남아있는거만 하고 싶다? 

일단 B를 오른쪽에 두고 RIGHT JOIN을 하고, 겹치는 쪽을 뺴기 위해서 반대쪽 KEY NULL

4. OUTER JON
A테이블이 가지고 있는거, B테이블이 가지고 있는거 둘다 SELECT

 


ID	ENAME	KNAME
1	AAA	가
2	BBB	나
3	CCC	NULL
4	NULL	라
5	NULL	마
​

SELECT A.ID, A.ENAME, A.KNAME
FROM A FULL OUTER JOIN B
ON A.ID = B.ID
​

4-1. 오른쪽에 있는거만! + 왼쪽에 있는거만 SELECT
FULL OUTER가 가지고 있는 것 중 공통적인 부분을 제외한 값


ID	ENAME	KNAME
3	CCC	NULL
4	NULL	라
5	NULL	마
SELECT A.ID, A.ENAME, A.KNAME
FROM A FULL OUTER JOIN B
ON A.ID = B.ID
WHERE A.ID IS NULL OR B.ID IS NULL
