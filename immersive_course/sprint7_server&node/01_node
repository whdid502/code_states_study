node.js는 크롬v8 js엔진으로 빌드된 js런타임이다.

v8은 자바스크립트를 기계어러 컴파일해주는 엔진이다.

런타임은 프로그래밍언어가 구동되고 있는 환경이다.

즉 node.js는 자바스크립트를 기계어로 컴파일해주는 엔진으로 빌드업 되어있는 자바스크립트가 구동중인 환경이다.

node.js는 논블록킹 이벤트 모델이다.

이벤트란 유저의 버튼 클릭이나 네트워크에 리소스를 요청하는것

논블로킹 - 다음 함수의 실행이 현재 함수의 종료를 기다리지 않음

블로킹 - 다음 함수의 실행이 현재 함수의 종료 이후에 이루어 지는것

I/O model - input을 주면 output이 나오는 모델

이벤트 기반 및 논블로킹 I/O모델이란 유저의 클릭이나 네트워크에 리소스를 요청하는 이벤트가 논브로킹으로 이루어지는 input output model이다

즉 node.js는 js를 컴파일해서 구동하고, 이벤트 기반의 논블로킹모델로 속도가 빠르다

별도의 설치를 하지 않아도 node상에서 쓸 수 있는 모델이 있다.

require로 사용할 수 있으며 fs,http,url,path등이 있다.

npm은 node package manger 이고 세계에서 가장 큰 오픈소스 라이브러리 생태계중 하나이다.

package.json에 그 정보들이 모두 담겨있다.

package.json은 npm을 활용하기 위한 정보들이 담겨있는 파일이며 project전반에 관한 정보가 적혀있다.

npm install 은 package.json의 dependency를 바탕으로 설치한다. 반드시 --save를 사용해 라이브러리르 설치해주자

만약 dependency에 등록이 되어 있지 않다면 코드에서는 해당모듈을 사용하지만 npm install 로는 설치되지 않는다.

npm start란 script에 정의도있는 것으로 보통 서버의 start의 세팅

npm init > npm을 쓰는 프로젝트로관리하겠다

http 로 웹 접근시 발생하는 일

1. 도메인 네임으로 dns서버에 ip주소를 요청하고, 받아온다.
2. 해당 ip주소로 서버에 요청을해 받아온다.
(웹 서버의 라우팅, 주소 탐색 규칙에 따라 요청 처리)

http는 서버와 클라이언트가 주로 html등의 문서를 주고받는데 사용

주로 tcp/udp 80번 포트를 사용

포트란 주소뒤에 같이 콜론과 함께 숫자가 있는 경우

http/1.1의 경우 요청과 응답은  start/status line, header, body로 이루어져 있다

http 요청은 URI를 통해 할수 있다.

주소창을 통해 하는 요청은 전부 get request