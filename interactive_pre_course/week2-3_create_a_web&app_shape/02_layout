만들 앱&웹 화면의 가안을 생각하고 큰 틀(section)으로 나눈다.

html문서가 갖는 기본 스타일이 레이아웃을 잡는데 방해가 될 수 있지만, 문제는 해결 가능 하다.

레아이웃을 잡을때 flexbox를 사용하자.

ex) display: flex;

flex-direction을 사용해 수직 혹은 수평으로 나열할 수 있다.

grow(팽창지수), shrink(수축지수), basis(기본크기)
flex의 자식박스는 어떠한 속성도 주지 않으면 오른쪽 컨텐츠 크기만큼 배치된다. 이때의 값은 다음과 같다,

flex: 0 1 auto;

0은 grow의 기본수치, 1은 shrink의 기본수치, auto는 basis의 기본수치이다.
이는 각각 따로 지정할 수 있으며 이를 사용해 자유롭게 크기를 설정할 수 있다.

grow, shrink는 단위가 없으며 비례하는 값이다.

grow
각 자식박스가 갖는 grow의 총합이 n이라고 하면, 1은 1/n이라는 것을 의미한다.

shrink
grow와는 반대로 차지하는 비율만큼 박스가 작아진다. 보통 비율로 레이아웃을 지정할때 grow를 사용한다. shirnk는 실제 크기를 예측하기 어렵다. 기본값인 1로 두어도 무방하다.

basis
박스가 grow나 shrink에의해 변형되기 전 갖게된 기본크기를 의미한다. basis크기를 지정하면 그 크기는 보장된다.

width와 flex-basis를 동시에 적용하면 flex-basis가 우선된다.
안쪽박스의 콘텐츠가 넘칠 경우 width는 정확한 크기를 보장하지 않는다.
콘텐츠가 넘칠경우를 대비해 max-width를 쓸 수 있다. 단, flex-basis를 사용하지 않을 경우)

justify-content로 컨텐츠 수평정렬을 할수 있다.

align-items로 컨텐츠 수직정렬을 할 수 있다.

