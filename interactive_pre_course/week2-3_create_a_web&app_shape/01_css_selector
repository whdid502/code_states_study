태그 셀렉터
h1 { }
div, h1 { }

전체 셀렉터
 * { }

ID 셀렉터
#only { }

Class 셀렉터
.not_only{ }

attribute 셀렉터

href속성을 가진 a태그 전부
a[href]{ }

id가 only인 p태그 
p[id='only']{ }

class가 out인 p태그 전부
p[class='out']{ }

class가 정확히 out이거나 out으로 시작하는 p태그 전부
p[class|='out']{ }

id의 접두사로 sect가 포함된 section
section[id^='sect']{ }

class의 접미사로 2가 포함된 div
div[class$='2']{ }

class안에 w가 적어도 하나라도 들어간 div
div[class*='w']{ }

후손 셀렉터(자식 셀렉터 전부 다)
header h1 { }

자식 셀렉터
header > p { }

인접 형제 셀렉터
section + p { }

형제 셀렉터
section - p { }

css 가상클래스는 선택자 뒤에 :(가상선택자)를 붙이면 특정 이벤트마다 적용할 스타일을 고를 수 있으며, html,css,js의 코드를 효과적으로 줄일 수 있다.

방문한 적이 없는 링크
a:link{ }

방문한 적이 있는 링크
a:visited{ }

마우스를 롤오버했을때(마우스를 위에 올려두었을때)
a:hover{ }

마우스로 눌렀을때
a:active{ }

포커스 되었을때(input같은 경우)
a:focus{ }

셀렉터가 체크된 상황일때
input:checked

셀렉터가 사용 가능할때
input:enabled

셀렉터가 사용 불가능할때
input:disabled

p태그의 첫번째 자식
p:first-child{ }

ul태그의 자식태그중 li태그의 마지막 자식
ul > li:last-child{ }

ul태그의 자식태그중 li태그의 짝수번째 자식
ul > li:nth-child(2n){ }

section태그의 자식태그중 p태그의 홀수번째 자식
section > p:nth-child(2n+1){ }

div태그의 자식태그중 div태그의 n번째 자식
div > div:nth-child(n){ }

형제태그중 p태그와 일치하는 태그중 가장 첫째
p:first-of-type{ }

형제태그중 div태그와 일치하는 태그중 가장 마지막
div:last-of-type{ }

형제태그중 ul태그와 일치하는 태그중 n번째
ul:nth-of-type(n){ }

형제태그중 p태그와 일치하는 태그중 뒤에서 n번째
p:nth-last-of-type(n){ }

:not은 부정 셀렉터로 해당 셀렉터가 아닌 모든 태그를 선택한다.

type이 password가 아닌 모든 input태그
input:not([type='password']){ }