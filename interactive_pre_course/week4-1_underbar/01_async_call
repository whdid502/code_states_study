동기 호출과 비동기 호출

callback review
다른 함수의 전달인자로 넘겨주는 함수

parameter를 넘겨받는 함수는 콜백함수를 필요에 따라 즉시실행(동기실행),혹은 나중에 실행(비동기실행)할수 있다.

callback in action : 반복실행하는 함수(iterator)

ex) [1,2,3].map(function(element,idx){
    return element * element
    })

callback in action : 이벤트에 따른 함수(event handler)

ex) document.querySelector('#btn').addEventListner('click','function(e){
    console.log('button clicked')
    })

헷갈리지 말아야 할것

ex) function handleClick(){
    console.log('button clicked')
    }

    document.querySelector('#btn').onclick = handleClick;               o
    docoument.querySelector('#btn').onclick = function(){handleClick()} o
    document.querySelector('#btn').onclick = handleClick.bind();        o
    document.querySelector('#btn').onclick = handleClick()              x

    함수 실행(실행결과)을 연결하는게 아닌, 함수 자체를 연결한다.

blocking vs non-blocking

blocking : 전화, 하던일을 멈추고 받아야 한다.
           요청에 대한 결과가 동시에 일어난다.

non-blocking : 문자, 확인후, 나중에 답장할 수 있다.
               요청에 대한 결과가 동시에 일어나지 않는다.


비동기함수 전달 패턴1 : callback패턴
ex) let request = 'caffelatte'
    orderCoffeeAsync(request, function(response){
        //reponse =>  주문한 커피 결과
        drink(response);
    })

비동기함수 전달 패턴2 : 이벤트 등록 패턴
ex) let request = 'caffelatte'
    orderCoffeeAsync(request).onready = function(response){
        //response => 주문한 커피 결과
        drink(response)
    }

비동기의 주요 사례
1. DOM의 이벤트 핸들러
  - 마우스, 키보드 입력(click, keydown 등)
  - 페이지 로딩(DOMContentLoaded 등)
2. 타이머
  - 타이머 API(setTimeout 등)
  - 애니메이션 API(requestAnimationFrame)
3. 서버에 자원요청 및 응답
  - fetch API
  - AJAX(XHR)

타이머 관련 API
 
setTimeout(callback, milisecond)

일정시간후에 함수를 실행

arguments : 실행할 callback함수, 기다려야 할 시간(milisecond)
return value : 임의의 타이머 ID

ex) setTimeout(function(){
    console.log('1초후 실행');
    }, 1000)
    /// 123

setInterval(callback, milisecond)

일정 시간의 간격을 가지고 함수를 반복적으로 실행

arguments : 실행할 callback 함수, 시간 간격
return value : 임의의 타이머 ID

ex) setInterval(function(){
    console.log('1초마다 실행');
    }, 1000)
    // 345

clearInterval(timerID)

반복중인 실행 타이머를 종료

arguments : 타이머 ID
return value : 없음

ex) var timer = setInterval(function(){
    console.log('1초마다 실행');
    }, 1000)
    clearInterval(timer)
    //더이상 반복실행되지 않음