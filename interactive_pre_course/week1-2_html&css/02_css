css는 단순히 디자인만을 위한 것이 아니다.

1. 적당한 위치에 콘텐츠 배치(레이아웃)
2. 텍스트 강조와 같은 최소한의 타이포그래피
3. 최소한의 접근성

css는 서버개발자, 디자이너의 영역이 아니다. 

간단한 ui를 만드는것은 개발자의기본적인 소양이다.

프론트엔드 개발자는 다음과 같은 소양이 필요하다.

1. 화면 구성을 할 줄 아는 능력
2. 보기 좋은 화면을 만들 줄 아는 능력

그리고 이러한 소양이 있으면 좋다.

1. 정렬이 어긋나거나 배색이 좋지 않음을 인지할 수 있는 감각
2. 사용자가 사용하기 편한 앱이 무엇인지, 왜 편하게 느끼는지에 대한 이유를 분석해 본 경험

css의 문법은 다음과 같이 구성되어 있다.

body{
    color : red;
    font-size : 30px;
}

body부분은 셀렉터
중괄호 안의 부분은 선언 블록
그리고 내부의 선언으로 이루어져있다.
선언은 속성명과 속성값으로 구분되고 ;, 속성구분자로 구분된다.

css파일 추가

<link rel='stylesheet' href='index.css'/>

html 태그에 css속성을 추가 할 수도 있다.

하지만 위 방법은 관심사 분리 측면에서 권장되지 않다.

셀렉터를 지정하기

ex) body{
        
    }

    --- 태그로 지정 ---

    h1{

    }

    --- 태그로 지정 ---

    .class{

    }

    --- class로 지정 ---

    #id{

    }

    --- id로 지정 ---

색상

color를 사용한다.

글꼴

font-family 를 사용한다.

크기

font-size를 사용한다.

css에서의 단위

절대 단위 : px, pt...

상대 단위 : %, em, rem, ch, vw, vh ..

절대적이고 확실한 크기를 정할땐 px를 사용하면 되지만 접근성에서 불리하다,

이 말은 사용자가 사용하는 화면에 따라서 고정된 사이즈는 예기치 못한 디자인붕괴를 일으킨다.

보통의 경우에는 rem을 추천한다. 브라우저의 기본 글자크기가 1rem이며 두배로 크게하고싶다면 2rem, 작게하려면 0.9rem등으로 조절 가능하다.

화면 너비 및 높이에 따른 상대적인 크기가 중요할땐 vw, vh를 사용한다.

웹사이트의 보여지는 영역을 vw라고한다.

vh는 vw 및 height를 의미한다.

굵기

font-weight를 사용한다.

밑줄, 가로줄

text-decoration을 사용한다.

자간

letter-spacing을 사용한다.

행간

line-height를 사용한다.

가로 정렬

text-aling을 사용한다.

세로정렬

vertical-align을 생각하기 쉽지만, 부모 엘리먼트의 종류를 특정해야 한다.

<center>,<font>같은 태그는 관심사 분리의 측면에서 사용하지 말자.

css 박스 모델

모든 콘텐츠는 각자의 영역을 가지며, 보통 엘리먼트로 묶이는 콘텐츠가 하나의 박스가 된다.

박스는 항상 사각형이고 그 너비와 높이가 있다. 이를 css 속성으로 크기를 설정할 수 있다.

줄바꿈이 되는 박스를 block박스라고하며, 옆으로 붙는 박스를 inline박스라고 부른다.

inline박스는 옆으로 붙게되며 고유의 크기를 갖게 된다.

                        block       inline-block        inline
줄바꿈여부               가능         불가능               불가능
기본너비                 100%        내용만큼              내용만큼
width,heigth사용 여부    가능         가능                 불가능

margin
박스와 부모 엘리멘트 사이의 공간

padding
박스와 내부 콘텐츠 사이의 공간

border
경계선은 심미적으로도 필욯다지만, 개발과정에서도 중요하다. 

영역이 해당하는 크기를 만들기 위해 시각적으로 확인 가능 하다.

자동줄바꿈

overfolw를 사용한다. 컨텐츠가 박스를 넘어갈만큼 양이 많을때 자동으로 줄바꿈을 해준다.