항상 수도코드부터 작성해보자

ex) 텍스트를 입력으로 받는다
        foo라는 단어를 찾는다
        그단어를 지운다
        그 자리에 새로운 단어를 넣는다
    바뀐 내용을 리턴한다

    >>

    텍스트를 입력으로 받는다
        끝까지 일치하는지 확인해본 후
        foo라는 글자가 index -1이 아니면 단어를 찾은것이다
    while index를 발견하면
        index를 이용해 foo바로 앞까지 텍스트를 얻어내고
        foo대신 새 단어를 넣는다
        foo이후 의 텍스트를 넣는다
    endwhile
    바뀐내용을 리턴한다

코드스타일링에 신경쓰자.

타인이 봐도 이해하기 쉬운 코드를 작성하는 것이 중요점

들여쓰기를 주의하자, space가 대세다 하지만 혼용은 하지말자\

변수값의 네이밍에 주의하자

변수에 할당되는 값의 형식이 아니라 의미가 반영되어야 한다.

데이터의 모음이 할당된 변수는 복수명사가 좋다.

불리언이 할당된 변수는 is,are을 사용하자

함수의 이름은 동사로 시작하는게 좋다

class가 할당된 변수는 보통 첫글자를 대문자로 사용한다.

상수는 모두 대문자로 적는다.

문법적으로 생략이 가능해도 중괄호는 생략치 않는다

작은 따옴표를 권장합니다

줄바꿈이 필요한 문자열은 백틱을 사용하자

코드의 끝에는 세미콜론을 붙이자

is,for,while의 끝에는 세미콜론을 사용치 않는다

함수의 표현식 끝에는 세미콜론을 사용한다.

연산자는 엄격한 비교연산자를 사용하자.

3항 연산자는 간결하고 가독성이 좋은경우만 사용하자.

not연산자(!)는 바로 앞에 붙여서 쓰자

코드는 뜻이 분명하고 되도록 짧게 쓰자

부정의 의미가 명확한 곳에서만 not연산자를 사용하자

boolean으로 평가되는 표현문은 바로 리턴할것

줄바꿈은 최소로 사용할것

들여쓰기는 일관성있게, 최소화화여 사용하자

같은 라인에 값으 ㄹ보기위해 하느 ㄴ들여쓰기는 하지 않는다,

콤마(,), 연산자 사이는 한칸 띄어쓴다.

주석은 꼭 필요한 경우에만 사용하자